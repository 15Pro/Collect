port: 7890           # HTTP 代理端口
socks-port: 7891     # Socks 端口
redir-port: 7892     # Redir 端口
mixed-port: 7893     # 混合端口
allow-lan: true      # 允许局域网连接
bind-address: "*"    # 地址绑定
mode: rule           # 规则模式
log-level: info      # 日志级别
ipv6: false          # IPV6开关
external-controller: 127.0.0.1:9090


profile:
  store-selected: true # 存储 select 选择记录
  store-fake-ip: true  # 持久化 fake-ip
  
sniffer:               # 嗅探域名 可选配置
  enable: true
  parse-pure-ip: true  # 是否使用嗅探结果作为实际访问，默认 true
  sniff:
    TLS:               # TLS 默认嗅探 443
      ports: [443, 8443]
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
      

tun:                   # Tun 配置
  enable: true
  stack: system        # 可选： system/gvisor/lwip
                       # tun模式堆栈,如无使用问题,建议使用 system 栈;
                       # MacOS 用户推荐 gvisor栈,IOS无法使用system栈
  dns-hijack:          # dns劫持,一般设置为 any:53 即可, 即劫持所有53端口的udp流量
     - 'any:53'
# strict_route: true   # 将所有连接路由到tun来防止泄漏，但你的设备将无法其他设备被访问
  auto-route: true     # 自动设置全局路由，可以自动将全局流量路由进入tun网卡。
  auto-detect-interface: true     # 自动识别出口网卡


dns:
  enable: true       # 不使用系统 DNS
  ipv6: false        # 关闭 IPV6
  listen: 0.0.0.0:53 # dns 监听
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - "*.lan"
    - localhost.ptlogin2.qq.com
    - +.srv.nintendo.net
    - +.stun.playstation.net
    - +.msftconnecttest.com
    - +.msftncsi.com
    - +.xboxlive.com
    - msftconnecttest.com
    - xbox.*.microsoft.com
    - "*.battlenet.com.cn"
    - "*.battlenet.com"
    - "*.blzstatic.cn"
    - "*.battle.net"
  nameserver:        # 默认 DNS 服务
    - 223.5.5.5
    - 119.29.29.29
  fallback:          # 国外 DNS 服务器
    - https://cloudflare-dns.com/dns-query
    - https://dns.google/dns-query
    - https://dns.alidns.com/dns-query
  fallback-filter:
    geoip: true
    geoip-code: CN
    ipcidr:
      - 240.0.0.0/4


#========= 建立锚点 =========#

# 策略组引用相关参数
pr:      &a3 {type: select,   proxies: [ DIRECT, 香港节点, 日本节点, 美国节点, 台湾节点, 狮城节点, 韩国节点] }
# 订阅更新和延迟测试相关参数
p:       &a1 {type: http,     interval: 86400,  health-check: {enable: true, url: http://www.gstatic.com/generate_204, interval: 1800} }
# 自动选择策略组：选取延迟最低节点
auto:    &a4 {type: url-test, lazy: true,  url: http://www.gstatic.com/generate_204, interval: 900, use: [Subscribe] }
# 手动选择策略组：手动选择想要的节点/策略组
select:  &a2 {type: select,   use: [Subscribe] }
# classical规则相关
c:       &a6 {type: http,     behavior: classical, interval: 86400}
# domain规则相关
d:       &a5 {type: http,     behavior: domain,    interval: 86400}
# ipcidr规则相关
i:       &a7 {type: http,     behavior: ipcidr,    interval: 86400}

#========= 锚点结束 =========#


# 机场订阅
proxy-providers:
  Subscribe:
    <<: *a1
    url: 
    # URL后面填写格式1[单一订阅]: 直接填写你的机场Clash订阅[推荐此种方式，避免订阅泄露]
    # URL后面填写格式2[多个订阅]：https://api.nexconvert.com/sub?target=clash&url=请手动填入你的订阅(多机场订阅用|分割即可)&emoji=true&list=true&new_name=true&udp=false
    path: ./proxy_providers/tmp.yaml
    
proxies: null
proxy-groups:
#分流分组
  - {name:  全球加速, <<: *a3}
  - {name:  国际媒体, <<: *a3}
  - {name:  油管视频, <<: *a3}
  - {name:  奈飞影视, <<: *a3}
  - {name:  谷歌服务, <<: *a3}
  - {name:  ChatGPT, <<: *a3}
  - {name:  电报信息, <<: *a3}
  - {name:  游戏加速, <<: *a3}
  - {name:  苹果服务, <<: *a3}
  - {name:  哔哩哔哩, <<: *a3}
  - {name:  国内直连, <<: *a3}

#节点分组
  - {name:  香港节点, <<: *a4, filter: "港|HK|(?i)Hong"             }             # a4更改为a2，即为手动选择
  - {name:  台湾节点, <<: *a4, filter: "台|湾|TW|(?i)Taiwan"        }             # a4更改为a2，即为手动选择
  - {name:  美国节点, <<: *a4, filter: "美|US|(?i)States|American"  }             # a4更改为a2，即为手动选择
  - {name:  狮城节点, <<: *a4, filter: "新|狮|獅|SG|(?i)Singapore"  }             # a4更改为a2，即为手动选择
  - {name:  日本节点, <<: *a4, filter: "日|东京|JP|(?i)Japan"       }             # a4更改为a2，即为手动选择   
  - {name:  韩国节点, <<: *a4, filter: "韩|韓|朝|KR|(?i)Korea"      }             # a4更改为a2，即为手动选择

# 分流规则
rule-providers:
  # 局域网
  Lan:          {<<: *a6, url: https://cdn.jsdelivr.net/gh/axcsz/Collect@master/Clash/Ruleset/Lan.yaml,                        path: ./ruleset/Lan.yaml         }
  # 广告拦截
  AdGuard:      {<<: *a6, url: https://cdn.jsdelivr.net/gh/axcsz/Collect@master/Clash/Ruleset/Guard/AdGuard.yaml,              path: ./ruleset/AdGuard.yaml     }
  # 哔哩哔哩
  BiliBili:     {<<: *a6, url: https://cdn.jsdelivr.net/gh/axcsz/Collect@master/Clash/Ruleset/Media/StreamingSE.yaml,          path: ./ruleset/StreamingSE.yaml }
  # 油管视频
  YouTube:      {<<: *a6, url: https://cdn.jsdelivr.net/gh/axcsz/Collect@master/Clash/Ruleset/Media/Video/YouTube.yaml,        path: ./ruleset/YouTube.yaml     }
  # 奈飞影视
  Netflix:      {<<: *a6, url: https://cdn.jsdelivr.net/gh/axcsz/Collect@master/Clash/Ruleset/Media/Video/Netflix.yaml,        path: ./ruleset/Netflix.yaml     }
  # 国际媒体
  Streaming:    {<<: *a6, url: https://cdn.jsdelivr.net/gh/axcsz/Collect@master/Clash/Ruleset/Media/Streaming.yaml,            path: ./ruleset/Streaming.yaml   }
  # 推特服务
  Twitter:      {<<: *a6, url: https://cdn.jsdelivr.net/gh/axcsz/Collect@master/Clash/Ruleset/Extra/Twitter/Twitter.yaml,      path: ./ruleset/Twitter.yaml     }
  # 电报信息
  Telegram:     {<<: *a6, url: https://cdn.jsdelivr.net/gh/axcsz/Collect@master/Clash/Ruleset/Extra/Telegram/Telegram.yaml,    path: ./ruleset/Telegram.yaml    }
  # 游戏加速
  Steam:        {<<: *a6, url: https://cdn.jsdelivr.net/gh/axcsz/Collect@master/Clash/Ruleset/Extra/Game/Steam.yaml,           path: ./ruleset/Steam.yaml       }
  # ChatGPT
  OpenAI:       {<<: *a6, url: https://cdn.jsdelivr.net/gh/axcsz/Collect@master/Clash/Ruleset/Extra/OpenAI/OpenAI.yaml,        path: ./ruleset/OpenAI.yaml      }
  # 谷歌服务
  Google:       {<<: *a6, url: https://cdn.jsdelivr.net/gh/axcsz/Collect@master/Clash/Ruleset/Extra/Google/Google.yaml,        path: ./ruleset/Google.yaml      }
  # 苹果服务
  Apple:        {<<: *a6, url: https://cdn.jsdelivr.net/gh/axcsz/Collect@master/Clash/Ruleset/Extra/Apple/Apple.yaml,          path: ./ruleset/Apple.yaml       }
  # 国际互联
  Global:       {<<: *a6, url: https://cdn.jsdelivr.net/gh/axcsz/Collect@master/Clash/Ruleset/Global.yaml,                     path: ./ruleset/Global.yaml      }
  # 微信直连
  WeChat:       {<<: *a6, url: https://cdn.jsdelivr.net/gh/axcsz/Collect@master/Clash/Ruleset/Extra/WeChat/WeChat.yaml,        path: ./ruleset/WeChat.yaml      }
  # 国内媒体
  StreamingCN:  {<<: *a6, url: https://cdn.jsdelivr.net/gh/axcsz/Collect@master/Clash/Ruleset/Media/StreamingCN.yaml,          path: ./ruleset/StreamingCN.yaml }
  # 国内互联
  China:        {<<: *a6, url: https://cdn.jsdelivr.net/gh/axcsz/Collect@master/Clash/Ruleset/China.yaml,                      path: ./ruleset/China.yaml       }

 # 分流Policy
rules:
  - RULE-SET,Lan, DIRECT
  - RULE-SET,AdGuard, REJECT
  - RULE-SET,BiliBili, 哔哩哔哩
  - RULE-SET,YouTube, 油管视频
  - RULE-SET,Netflix, 奈飞影视
  - RULE-SET,Streaming, 国际媒体
  - RULE-SET,Twitter, 全球加速
  - RULE-SET,Telegram, 电报信息
  - RULE-SET,Steam, 游戏加速
  - RULE-SET,OpenAI, ChatGPT
  - RULE-SET,Google, 谷歌服务
  - RULE-SET,Apple, 苹果服务
  - RULE-SET,Global, 全球加速
  - RULE-SET,WeChat, 国内直连
  - RULE-SET,StreamingCN, 国内直连
  - RULE-SET,China, 国内直连
  - GEOIP,CN, 国内直连
  - MATCH, 全球加速

script:
  shortcuts:
    quic: network == 'udp' and dst_port == 443