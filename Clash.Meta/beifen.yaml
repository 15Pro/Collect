#!name = mihomo 配置文件
#!desc = 说明：理论上适用于所有的 Meta 内核，已测试的有 Clash Verg Rev、Openclash、mihomo 
#!date = 2024-05-19 10:00
#!source = https://wiki.metacubex.one/example/conf/#__tabbed_1_3


# 全局配置
# # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录 true/false
ipv6: true
# 允许局域网连接
allow-lan: true
# HTTP(S) 和 SOCKS 代理混合端口
mixed-port: 56789
# 更换延迟计算方式,去除握手等额外延迟
unified-delay: false
# TCP 并发连接所有 IP, 将使用最快握手的 TCP
tcp-concurrent: true

# 配置 WEB UI
# UI 名字
external-ui: ui
# 外部控制器，可以使用 RESTful API 来控制你的 Clash 内核
external-controller: 0.0.0.0:9090
# 自定义外部用户界面下载地址
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

# 匹配所有进程 always/strict/off
##  - always, 开启，强制匹配所有进程
##  - strict, 默认，由 mihomo 判断是否开启
##  - off, 不匹配进程，推荐在路由器上使用此模式
find-process-mode: strict
# 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint
##  - 可选： "chrome","firefox","safari","ios","random","none" options.
##  - Utls is currently support TLS transport in TCP/grpc/WS/HTTP for VLESS/Vmess and trojan.
global-client-fingerprint: chrome

# profile 应为扩展配置，但在 mihomo, 仅作为缓存项使用
profile:
  # 储存 API 对策略组的选择，以供下次启动时使用
  store-selected: true
  # 储存 fakeip 映射表，域名再次发生连接时，使用原有映射地址
  store-fake-ip: true

# 嗅探域名 可选配置
sniffer:
  enable: true
# TLS 和 QUIC 默认如果不配置 ports 默认嗅探 443
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
# 需要跳过嗅探的域名
  skip-classical:
    - "Mijia Cloud"     # 米家设备，建议加
    - "dlg.io.mi.com"
    - "+.apple.com"     # 苹果域名，建议加

# TUN 配置
tun:
  enable: true
# 可选： gvisor/mixed
  stack: mixed
# DNS 劫持，一般设置为 any:53 即可, 即劫持所有53端口的 udp 流量
  dns-hijack:
    - "any:53"
# 自动设置全局路由表，可以自动将全局流量路由进入 TUN 网卡。
  auto-route: true
# 自动识别出口网卡
  auto-detect-interface: true

# DNS 配置
dns:
# 关闭将使用系统 DNS
  enable: true
# 开启 DNS 服务器监听
  listen: :53
# IPV6解析开关；如果为false，将返回ipv6结果为空
  ipv6: true
# 模式：redir-host 或 fake-ip （默认使用 fake-ip 模式）
  enhanced-mode: fake-ip
# Fake-IP解析地址池
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter:
    - "*"
    - "+.lan"
    - "+.local"
# 解析非 IP 的 DNS 用的 DNS 服务器，只支持纯 IP
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
# 这部分为主要 DNS 配置，支持udp/tcp/dot/doh/doq，影响所有直连，确保使用对大陆解析精准的 DNS
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query

######### 策略锚点 start #######
# 策略组
pr: &pr {type: select, proxies: [ss, vless, hysteria2]}
######### 策略锚点 end #######

# 单个出站代理节点
proxies:
# 直连节点
- name: "国内直连"
  type: direct
  udp: true
  tfo: true
  mptcp: true
  ip-version: ipv6-prefer

# 自建 Shadowsocks 节点
- name: "ss"
  type: ss
  server: server
  port: 443
  cipher:  aes-256-gcm
  password: "password"
  udp: true
  tfo: true
  mptcp: true
  ip-version: ipv6-prefer

# 自建 VLESS 节点
- name: "vless"
  type: vless
  server: server
  port: 443
  udp: true
  uuid: uuid
  flow: xtls-rprx-vision
  packet-encoding: xudp
  tls: true
  servername: example.com
  alpn:
  - h2
  - http/1.1
  fingerprint: xxxx
  client-fingerprint: chrome
  skip-cert-verify: true
  reality-opts:
    public-key: xxxx
    short-id: xxxx
  network: tcp
  smux:
    enabled: false

# 自建 Hysteria2 节点
- name: "hysteria2"
  type: hysteria2
  server: server.com
  port: 443
  # ports: 10000-20000/443
  #  up和down均不写或为0则使用BBR流控
  # up: "30 Mbps" # 若不写单位，默认为 Mbps
  # down: "200 Mbps" # 若不写单位，默认为 Mbps
  password: yourpassword
  # obfs: salamander # 默认为空，如果填写则开启obfs，目前仅支持salamander
  # obfs-password: yourpassword
  # sni: server.com
  # skip-cert-verify: false
  # fingerprint: xxxx
  # alpn:
  #   - h3
  # ca: "./my.ca"
  # ca-str: "xyz"

# 策略组
proxy-groups:
  # 策略分组
  - {name: 谷歌, <<: *pg}
  - {name: 微软, <<: *pg}
  - {name: 电报, <<: *pg}
  - {name: 智能, <<: *pg}
  - {name: 游戏, <<: *pg}
  - {name: 媒体, <<: *pg}
  - {name: 全球, <<: *pg}
  - {name: 苹果, type: select, proxies: [直连, 全球]}

# 分流规则
rules:
  - RULE-SET,Adrules,REJECT
  - RULE-SET,AdsBlock,REJECT
  - DST-PORT,22,全球
  - RULE-SET,Game,游戏
  - RULE-SET,OpenAI,智能
  - RULE-SET,YouTube,谷歌
  - RULE-SET,Google,谷歌
  - RULE-SET,GitHub,微软
  - RULE-SET,OneDrive,微软
  - RULE-SET,Microsoft,微软
  - RULE-SET,Telegram,电报
  - RULE-SET,GlobalMedia,媒体
  - RULE-SET,GlobalGFW,全球
  - RULE-SET,Apple,苹果
  - RULE-SET,ChinaMedia,直连
  - RULE-SET,China,直连
  - RULE-SET,Lan,直连
  - GEOIP,CN,直连,no-resolve
  - MATCH,全球

######### 规则锚点 start #######
# 规则集
rule-anchor:
  # classical 规则相关
  cl: &cl {type: http, interval: 43200, behavior: classical, format: text, proxy: 全球}
######### 规则锚点 end #######

# 订阅规则集
rule-providers:
# 广告拦截
  Adrules:
    <<: *cl
    url: "https://adrules.top/adrules.list"
  AdsBlock:
    <<: *cl
    url: "https://raw.githubusercontent.com/axcsz/Collect/master/Ruleset/Block/AdsBlock.list"
# ChatGPT
  OpenAI:
    <<: *cl
    url: "https://raw.githubusercontent.com/axcsz/Collect/master/Ruleset/Other/OpenAI.list"
# 游戏平台
  Game:
    <<: *cl
    url: "https://raw.githubusercontent.com/axcsz/Collect/master/Ruleset/Other/Game.list"
# 社交平台
  Telegram:
    <<: *cl
    url: "https://raw.githubusercontent.com/axcsz/Collect/master/Ruleset/Other/Telegram.list"
# 谷歌服务
  YouTube:
    <<: *cl
    url: "https://raw.githubusercontent.com/axcsz/Collect/master/Ruleset/Media/YouTube.list"
  Google:
    <<: *cl
    url: "https://raw.githubusercontent.com/axcsz/Collect/master/Ruleset/Other/Google.list"
# 微软服务
  GitHub:
    <<: *cl
    url: "https://raw.githubusercontent.com/axcsz/Collect/master/Ruleset/Other/GitHub.list"
  OneDrive:
    <<: *cl
    url: "https://raw.githubusercontent.com/axcsz/Collect/master/Ruleset/Other/OneDrive.list"
  Microsoft:
    <<: *cl
    url: "https://raw.githubusercontent.com/axcsz/Collect/master/Ruleset/Other/Microsoft.list"
# 媒体影视
  GlobalMedia:
    <<: *cl
    url: "https://raw.githubusercontent.com/axcsz/Collect/master/Ruleset/Media/GlobalMedia.list"
# 全球服务
  GlobalGFW:
    <<: *cl
    url: "https://raw.githubusercontent.com/axcsz/Collect/master/Ruleset/GlobalGFW.list"
# 苹果服务
  Apple:
    <<: *cl
    url: "https://raw.githubusercontent.com/axcsz/Collect/master/Ruleset/Other/Apple.list"
# 国内服务
  WeChat:
    <<: *cl
    url: "https://raw.githubusercontent.com/axcsz/Collect/master/Ruleset/Other/WeChat.list"
  ChinaMedia:
    <<: *cl
    url: "https://raw.githubusercontent.com/axcsz/Collect/master/Ruleset/Media/ChinaMedia.list"
  China:
    <<: *cl
    url: "https://raw.githubusercontent.com/axcsz/Collect/master/Ruleset/Direct.list"
# 本地/局域网
  Lan:
    <<: *cl
    url: "https://raw.githubusercontent.com/axcsz/Collect/master/Ruleset/Local.list"

# script
script:
  shortcuts:
    quic: network == 'udp' and dst_port == 443
